# .bashrc

{{ if contains "fedora" .osid -}}
# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

{{ else if contains "steamos" .osid -}}
[[ $- != *i* ]] && return

{{ end -}}
# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]; then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH

{{ if contains "linux" .osid -}}
if [ -x "/home/linuxbrew/.linuxbrew/bin/brew" ]; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

{{ end -}}
# User specific aliases and functions
[ -f ~/.hushlogin ] || touch ~/.hushlogin
MOTD="/{{- if contains "android" .osid -}}data/data/com.termux/files/usr/{{- end -}}etc/motd"
if [ -f "$MOTD" ]; then
    cmp -s "$HOME/.hushlogin" "$MOTD"
    if [ $? != 0 ]; then
        tee < "$MOTD"
        read -p $'\nDo you want to dismiss this message for future logins? (y/n): ' choice
        if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
            cp -f "$MOTD" "$HOME/.hushlogin"
        fi
    fi
fi

for script in "$HOME/.local/bin"/*.sh "$HOME/bin"/*.sh; do
    script_name=$(basename "$script" .sh)
    alias "$script_name"="$script"
done

function git() {
    if [[ "$1" == "push" ]]; then
        while true; do
            if pgrep -fl keepassxc > /dev/null; then
                command git "$@"
                return
            else
                echo "KeePassXC is not running. Launching KeePassXC..."
                keepassxc
                echo "Please unlock your database and then press Enter to continue."
                read -r
            fi
        done
    else
        command git "$@"
    fi
}

{{ if contains "fedora" .osid -}}
if [ -d ~/.bashrc.d ]; then
    for rc in ~/.bashrc.d/*; do
        if [ -f "$rc" ]; then
            . "$rc"
        fi
    done
fi
unset rc

{{- else if contains "android" .osid -}}
if [ -z "$SSH_AUTH_SOCK" ] || [ ! -S "$SSH_AUTH_SOCK" ]; then
    rm -f ~/.ssh/ssh-agent.sock
    eval "$(ssh-agent -s -a ~/.ssh/ssh-agent.sock > /dev/null 2>&1)"
fi
export SSH_AUTH_SOCK=~/.ssh/ssh-agent.sock
{{- end -}}